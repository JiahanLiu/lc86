@04 // AND AL,imm8 (0x24)
0100000001000010011100000000000001000010101011100000000000000000  // 0x4042700042AE0000
@05 // AND (E)AX,imm (0x25)
0100000001000010011100000000000001000010101011100000000000000000  // 0x4042700042AE0000
@00 // AND r/m8,r8 (0x20)
0000000010000010011100000000000001000010101011100000000000000000  // 0x82700042AE0000
@01 // AND r/m,r (16/32) (0x21)
0000000010000010011100000000000001000010101011100000000000000000  // 0x82700042AE0000
@02 // AND r8, r/m8 (0x22)
0011000001000010011100000000000001000010101011100000000000000000  // 0x3042700042AE0000
@03 // AND r,r/m (16/32) (0x23)
0011000001000010011100000000000001000010101011100000000000000000  // 0x3042700042AE0000
@07 // DAA (0x27)
0100000001000001111100000000000001000010101111100000000000000000  // 0x4041F00042BE0000
@10 // IRETd (uop2) (0xCF)
0000000001100000010000000010000000000000000000001000000000000000  // 0x60402000008000
@11 // IRETd (uop3) (0xCF)
0000000001110000010001111000111001100010000000000000000000000000  // 0x70478E62000000
@12 // CMPS m8,m8 uop2 ()
0010111101100111010100000000000001000010101111100000000000000000  // 0x2F67500042BE0000
@13 // REPNE m8,m8 uop1transient ()
0000000001000000010010000000000000000000000000001011110000000000  // 0x4048000000BC00
@14 // REPNE m8,m8 uop2transient ()
0010111101100111010100000000000000000010101111101011101100000000  // 0x2F67500002BEBB00
@15 // REPNE m8,m8 uop1steadytate ()
0000000001100000010010000000000000000000000000001011101100000000  // 0x6048000000BB00
@16 // REPNE m8,m8 uop2steadystate ()
0010111101100111010100000000000000000010101111101011101100000000  // 0x2F67500002BEBB00
@17 // CMPS m,m (16/32) uop2 ()
0110111101100111010100000000000001000010101111100000000000000000  // 0x6F67500042BE0000
@18 // REPNE m,m (16/32) uop1transient ()
0000000001000000010010000000000000000000000000001100000100000000  // 0x4048000000C100
@19 // REPNE m,m (16/32) uop2transient ()
0110111101100111010100000000000000000010101111101100000000000000  // 0x6F67500002BEC000
@1a // REPNE m,m (16/32) uop1steadystate ()
0000000001100000010010000000000000000000000000001100000000000000  // 0x6048000000C000
@1b // REPNE m,m (16/32) uop2steadystate ()
0110111101100111010100000000000000000010101111101100000000000000  // 0x6F67500002BEC000
@1c // RET far (uop2) (0xCB)
0000000001110000010000101000010001100000000000000000000000000000  // 0x70428460000000
@1d // RET imm16,far (uop1) (0xCA)
0000000001000000010000000100000000000000000000001000000000000000  // 0x40404000008000
