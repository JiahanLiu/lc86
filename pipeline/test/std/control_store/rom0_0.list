@04 // ADD AL,imm8 (0x04)
0001000000000100100000000010100000010000000000000000100010000000  // 0x1004802810000880
@05 // ADD (E)AX,imm (0x05)
0110100000000100100000000010100000010000000000000000100010000000  // 0x6804802810000880
@00 // ADD r/m8,r8 (0x00)
0111000000000000000000000011000000000000000000000000100000000001  // 0x7000003000000801
@01 // ADD r/m,r (16/32) (0x01)
0110100000000000000000000011000000000000000000000000100000000001  // 0x6800003000000801
@02 // ADD r8, r/m8 (0x02)
0001000000000000000000000011000000001000000000000000000001100000  // 0x1000003008000060
@03 // ADD r,r/m (16/32) (0x03)
0000100000000000000000000011000000001000000000000000000001100000  // 0x800003008000060
@0c // OR AL,imm8 (0x0C)
0111000000000100100000000010100000010000000000000000100010000000  // 0x7004802810000880
@0d // OR (E)AX,imm (0x0D)
0110100000000100100000000010100000010000000000000000100010000000  // 0x6804802810000880
@08 // OR r/m8,r8 (0x08)
0111000000000000000000000011000000000000000000000000100000000001  // 0x7000003000000801
@09 // OR r/m,r (16/32) (0x09)
0110100000000000000000000011000000000000000000000000100000000001  // 0x6800003000000801
@0a // OR r8, r/m8 (0x0A)
0001000000000000000000000011000000001000000000000000000001100000  // 0x1000003008000060
@0b // OR r,r/m (16/32) (0x0B)
0000100000000000000000000011000000001000000000000000000001100000  // 0x800003008000060
@19 // CALL r/m16/32 (0xFF /2)
0000100110010001000000000010000000000000000000000000000000000001  // 0x991002000000001
@18 // INC r/m16/32 (0xFF /0)
0110100000000000000000000000000000000000000000000000100000000001  // 0x6800000000000801
@1a // JMP r/m16/32 (0xFF /4)
000000000000000100000000000000000000000000000000000000000000000  // 0x800000000000
@1f // POP DS (0x1F)
0001100110010110101111000001111000000000000000000000001010000000  // 0x1996BC1E00000280
@07 // POP ES (0x07)
0001100110010110100011000001111000000000000000000000001110000000  // 0x19968C1E00000380
@17 // POP SS (0x17)
0001100110010110101011000001111000000000000000000000000110000000  // 0x1996AC1E00000180
@1b // PUSH r/m16/32 (0xFF /6)
0000100110010000000011000011001000000000000000000000000000000001  // 0x9900C3200000001
@0e // PUSH CS (0x0E)
0001100110010100100111000001111000000000000000000000000000000001  // 0x19949C1E00000001
@16 // PUSH SS (0x16)
0001100110010100101011000001111000000000000000000000000000000001  // 0x1994AC1E00000001
@1e // PUSH DS (0x1E)
0001100110010100101111000001111000000000000000000000000000000001  // 0x1994BC1E00000001
@06 // PUSH ES (0x06)
0001100110010100100011000001111000000000000000000000000000000001  // 0x19948C1E00000001
@10 // INT/EXC (uop1) ()
000000000000000000000000000000000000000000000000000001  // 0x1
@11 // INT/EXC (uop2) ()
000000000000000000000000000000000000000000000000000001  // 0x1
@12 // INT/EXC (uop3) ()
000000000000000000000000000000000000000000000000000001  // 0x1
@13 // INT/EXC (uop4) ()
000000000000000000000000000000000000000000000000000000  // 0x0
