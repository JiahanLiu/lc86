@04 // AND AL,imm8 (0x24)
1000010011100000000000001000010101011100000000000000000000000000  // 0x84E000855C000000
@05 // AND (E)AX,imm (0x25)
1000010011100000000000001000010101011100000000000000000000000000  // 0x84E000855C000000
@00 // AND r/m8,r8 (0x20)
0000010011100000000000001000010101011100000000000000000000000000  // 0x4E000855C000000
@01 // AND r/m,r (16/32) (0x21)
0000010011100000000000001000010101011100000000000000000000000000  // 0x4E000855C000000
@02 // AND r8, r/m8 (0x22)
1000010011100000000000001000010101011100000000000000000000000000  // 0x84E000855C000000
@03 // AND r,r/m (16/32) (0x23)
1000010011100000000000001000010101011100000000000000000000000000  // 0x84E000855C000000
@07 // DAA (0x27)
1000001111100000000000001000010101111100000000000000000000000000  // 0x83E000857C000000
@10 // IRETd (uop2) (0xCF)
1100000010000000010000000000000000000001000000000000000000000000  // 0xC080400001000000
@11 // IRETd (uop3) (0xCF)
1110000010001111000111001100010000000000000000000000000000000000  // 0xE08F1CC400000000
@12 // CMPS m8,m8 uop2 ()
1100111010100000000000001000010101111100000000000000000000000000  // 0xCEA000857C000000
@13 // REPNE m8,m8 uop1transient ()
1000000010010000000000000000000000000001011110000000000000000000  // 0x8090000001780000
@14 // REPNE m8,m8 uop2transient ()
1100111010100000000000000000010101111101011101100000000000000000  // 0xCEA000057D760000
@15 // REPNE m8,m8 uop1steadytate ()
1100000010010000000000000000000000000001011101100000000000000000  // 0xC090000001760000
@16 // REPNE m8,m8 uop2steadystate ()
1100111010100000000000000000010101111101011101100000000000000000  // 0xCEA000057D760000
@17 // CMPS m,m (16/32) uop2 ()
1100111010100000000000001000010101111100000000000000000000000000  // 0xCEA000857C000000
@18 // REPNE m,m (16/32) uop1transient ()
1000000010010000000000000000000000000001100000100000000000000000  // 0x8090000001820000
@19 // REPNE m,m (16/32) uop2transient ()
1100111010100000000000000000010101111101100000000000000000000000  // 0xCEA000057D800000
@1a // REPNE m,m (16/32) uop1steadystate ()
1100000010010000000000000000000000000001100000000000000000000000  // 0xC090000001800000
@1b // REPNE m,m (16/32) uop2steadystate ()
1100111010100000000000000000010101111101100000000000000000000000  // 0xCEA000057D800000
@1c // RET far (uop2) (0xCB)
1110000010000101000010001100000000000000000000000000000000000000  // 0xE08508C000000000
@1d // RET imm16,far (uop1) (0xCA)
1000000010000000100000000000000000000001000000000000000000000000  // 0x8080800001000000
