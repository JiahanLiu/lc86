@04 // ADD AL,imm8 (0x04)
0100000000000100100000000010100000010000000000000000000000100010  // 0x4004802810000022
@05 // ADD (E)AX,imm (0x05)
0010000000000100100000000010100000010000000000000000000000100010  // 0x2004802810000022
@00 // ADD r/m8,r8 (0x00)
0100000000000000000000000011000000000000000000000000000000100000  // 0x4000003000000020
@01 // ADD r/m,r (16/32) (0x01)
0010000000000000000000000011000000000000000000000000000000100000  // 0x2000003000000020
@02 // ADD r8, r/m8 (0x02)
0100000000000000000000000011000000001000000000000000000000000001  // 0x4000003008000001
@03 // ADD r,r/m (16/32) (0x03)
0010000000000000000000000011000000001000000000000000000000000001  // 0x2000003008000001
@0c // OR AL,imm8 (0x0C)
0100000000000100100000000010100000010000000000000000000000100010  // 0x4004802810000022
@0d // OR (E)AX,imm (0x0D)
0010000000000100100000000010100000010000000000000000000000100010  // 0x2004802810000022
@08 // OR r/m8,r8 (0x08)
0100000000000000000000000011000000000000000000000000000000100000  // 0x4000003000000020
@09 // OR r/m,r (16/32) (0x09)
0010000000000000000000000011000000000000000000000000000000100000  // 0x2000003000000020
@0a // OR r8, r/m8 (0x0A)
0100000000000000000000000011000000001000000000000000000000000001  // 0x4000003008000001
@0b // OR r,r/m (16/32) (0x0B)
0010000000000000000000000011000000001000000000000000000000000001  // 0x2000003008000001
@19 // CALL r/m16/32 (0xFF /2)
0010011001000001000000000010000000000000000000000000100000000000  // 0x2641002000000800
@18 // INC r/m16/32 (0xFF /0)
0010000000000000000000000010000000000000000000000000000000100000  // 0x2000002000000020
@1a // JMP r/m16/32 (0xFF /4)
0000000000000001000000000000000000000000000000000000100000000000  // 0x1000000000800
@1f // POP DS (0x1F)
0110011001000110101111000001111000000000000000000000000000001010  // 0x6646BC1E0000000A
@07 // POP ES (0x07)
0110011001000110100011000001111000000000000000000000000000001110  // 0x66468C1E0000000E
@17 // POP SS (0x17)
0110011001000110101011000001111000000000000000000000000000000110  // 0x6646AC1E00000006
@1b // PUSH r/m16/32 (0xFF /6)
0010011001000000000011000011001000000000001000100000000000000000  // 0x26400C3200220000
@0e // PUSH CS (0x0E)
0110011001000100100111000001111001000000001000100000000000000000  // 0x66449C1E40220000
@16 // PUSH SS (0x16)
0110011001000100101011000001111000100000001000100000000000000000  // 0x6644AC1E20220000
@1e // PUSH DS (0x1E)
0110011001000100101111000001111000100000001000100000000000000000  // 0x6644BC1E20220000
@06 // PUSH ES (0x06)
0110011001000100100011000001111000100000001000000000000000000000  // 0x66448C1E20200000
@10 // INT/EXC (uop1) ()
111001000100000000000000000000000000000001000100000000000000000  // 0x7220000000220000
@11 // INT/EXC (uop2) ()
111101000100000000000000000000000000000011100100000110000000000  // 0x7A20000000720C00
@12 // INT/EXC (uop3) ()
000000000000000000000000000000000000000000000000000000  // 0x0
