@04 // AND AL,imm8 (0x24)
0111000000000100100000000010100000010000000000000000100010000000  // 0x7004802810000880
@05 // AND (E)AX,imm (0x25)
0110100000000100100000000010100000010000000000000000100010000000  // 0x6804802810000880
@00 // AND r/m8,r8 (0x20)
0111000000000000000000000011000000000000000000000000100000000001  // 0x7000003000000801
@01 // AND r/m,r (16/32) (0x21)
0110100000000000000000000011000000000000000000000000100000000001  // 0x6800003000000801
@02 // AND r8, r/m8 (0x22)
0001000000000000000000000011000000001000000000000000000001100000  // 0x1000003008000060
@03 // AND r,r/m (16/32) (0x23)
0000100000000000000000000011000000001000000000000000000001100000  // 0x800003008000060
@07 // DAA (0x27)
0111000000000100100000000010100000001000000000000000100010000000  // 0x7004802808000880
@10 // IRETd (uop2) (0xCF)
1000000110010111000011000100101000000000000000000000000000000000  // 0x81970C4A00000000
@11 // IRETd (uop3) (0xCF)
0000000110010111000011000100101000000000000000000000000000000000  // 0x1970C4A00000000
@12 // CMPS m8,m8 uop2 ()
0111001110110110111100001010110000000000000000000100100001011110  // 0x73B6F0AC0000485E
@13 // REPNE m8,m8 uop1transient ()
0000000000000000000000000000000000000000000000001000000000000000  // 0x8000
@14 // REPNE m8,m8 uop2transient ()
0110000000000000000000000000000000000000000000000100100001011110  // 0x600000000000485E
@15 // REPNE m8,m8 uop1steadytate ()
0110000000000000000000000000000000000000000000001010000000000000  // 0x600000000000A000
@16 // REPNE m8,m8 uop2steadystate ()
0110000000000000000000000000000000000000000000000110100001011110  // 0x600000000000685E
@17 // CMPS m,m (16/32) uop2 ()
0110101110110110111100001010110000000000000000000100111011011110  // 0x6BB6F0AC00004EDE
@18 // REPNE m,m (16/32) uop1transient ()
0000000000000000000000000000000000000000000000001000000000000000  // 0x8000
@19 // REPNE m,m (16/32) uop2transient ()
0110000000000000000000000000000000000000000000000100111011011110  // 0x6000000000004EDE
@1a // REPNE m,m (16/32) uop1steadystate ()
0110000000000000000000000000000000000000000000001010000000000000  // 0x600000000000A000
@1b // REPNE m,m (16/32) uop2steadystate ()
0110000000000000000000000000000000000000000000000110111011011110  // 0x6000000000006EDE
@1c // RET far (uop2) (0xCB)
0001100110011111000011000101101000000000000000000000000000000000  // 0x199F0C5A00000000
@1d // RET imm16,far (uop1) (0xCA)
1001100110011111000011000101101000000000000000000000000000000000  // 0x999F0C5A00000000
