@00 // (ADD/AND/OR)r/m8 imm8 (0x80 /0 /4 /1)
0000000000000000000001000000001000000000000000000000000101000xxx
@01 // ADD/AND/OR r/m(16/32) imm(16/32) (0x81 /0 /4 /1)
0100000000000000000001000000001000000000000000000000000101000xxx
@03 // ADD/AND/OR r/m(16/32) imm8 (0x83 /0 /4 /1)
0100000000000000000001000000001000000000000000000000000101000xxx
@1a // CALL ptr16:16/32 (0x9A)
xxx0xxxxxxxxx00xx000000000000x0x0000xxxx000xxxx000xx000001xxxxxx
@08 // MOV r/m8, r8 (0x88)
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000101xxxxxx
@09 // MOV r/m, r (16/32) (0x89)
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000101xxxxxx
@0a // MOV r8,r/m8 (0x8A)
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000010xxxxxx
@0b // MOV r,r/m(16,32) (0x8B)
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000010xxxxxx
@0c // MOV r/m16,Sreg (0x8C)
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000101xxxxxx
@0e // MOV Sreg, r/m16 (0x8E)
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000xxxxxx
@0f // POP r/m (16/32) (0x8F)
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000101xxxxxx
@10 // XCHG (E )AX,EAX (0x90)
0000101010010001000000010000000000000000000000000000000110000000  // 0xA91010000000180
@11 // XCHG (E )AX,r16/32 (0x91+r7)
0101111010010010001001110000000000000000000000010001000110000000  // 0x5E92270000011180
0101111010010100001001110000000000000000000000010001000110000000
0101111010010110001001110000000000000000000000010001000110000000
0101111010011000001001110000000000000000000000010001000110000000
0101111010011010001001110000000000000000000000010001000110000000
0101111010011100001001110000000000000000000000010001000110000000
0101111010011110001001110000000000000000000000010001000110000000
@06 // XCHG r/m8,r8 (0x86)
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000111000000
@07 // XCHG r/m,r (16/32) (0x87)
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000111000000
