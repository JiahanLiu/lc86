@00 // (ADD/AND/OR)8 imm8 (0080 /0 /4 /1)
0000000000000000000000001000000001000000000000000000000000001110  // 00804000000E
@01 // ADD/AND/OR imm (0081 /0 /4 /1)
0100000000000000000000001000000001000000000000000000000000001110  // 00400000804000000E
@03 // ADD/AND/OR imm8 (0083 /0 /4 /1)
0100000000000000000000001000000001000000000000000000000000001110  // 00400000804000000E
@1a // CALL ptr16:16/32 (009A)
0000000000000000000000000000000000000000000000000000000000101000
@08 // MOV r/m8, r8 (0088)
0000000000000000000000000000000000000000000000000000000000000000
@09 // MOV r/m, r (16/32) (0089)
0000000000000000000000000000000000000000000000000000000000000000
@0a // MOV r8,r/m8 (008A)
0000000000000000000000000000000000000000000000000000000000000000
@0b // MOV r,r/m(16,32) (008B)
0000000000000000000000000000000000000000000000000000000000000000
@0c // MOV r/m16,Sreg (008C)
0000000000000000000000000000000000000000000000000000000000000000
@0e // MOV Sreg, r/m16 (008E)
0000000000000000000000000000000000000000000000000000000000000000
@0f // POP r/m (16/32) (008F)
0000000000000000000000000000000000000000000000000000000000000000
@10 // XCHG (E )AX,EAX (0090)
0000000101010010001000000010000000000000000000000000000000001000  // 00152202000000008
@11 // XCHG (E )AX,r16/32 (0091+r7)
0101011111010010010001001110000000000000000000000001000110001000  // 0057D244E000001188
0101011111010010100001001110000000000000000000000001000110001000
0101011111010010110001001110000000000000000000000001000110001000
0101011111010011000001001110000000000000000000000001000110001000
0101011111010011010001001110000000000000000000000001000110001000
0101011111010011100001001110000000000000000000000001000110001000
0101011111010011110001001110000000000000000000000001000110001000
@06 // XCHG r/m8,r8 (0086)
0000000000000000000000000000000000000000000000000000000000000000
@07 // XCHG r/m,r (16/32) (0087)
0000000000000000000000000000000000000000000000000000000000000000
