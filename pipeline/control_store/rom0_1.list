@04 // ADD AL,imm8 (0x04)
0000100000001110000000000010000010101111100000000000000000000000  // 0x80E0020AF800000
@05 // ADD (E)AX,imm (0x05)
0000100000001110000000000010000010101111100000000000000000000000  // 0x80E0020AF800000
@00 // ADD r/m8,r8 (0x00)
0001000000001110000000000010000010101111100000000000000000000000  // 0x100E0020AF800000
@01 // ADD r/m,r (16/32) (0x01)
0001000000001110000000000010000010101111100000000000000000000000  // 0x100E0020AF800000
@02 // ADD r8, r/m8 (0x02)
0000100000001110000000000010000010101111100000000000000000000000  // 0x80E0020AF800000
@03 // ADD r,r/m (16/32) (0x03)
0000100000001110000000000010000010101111100000000000000000000000  // 0x80E0020AF800000
@0c // OR AL,imm8 (0x0C)
0000100000011110000000000010000010101011100000000000000000000000  // 0x81E0020AB800000
@0d // OR (E)AX,imm (0x0D)
0000100000011110000000000010000010101011100000000000000000000000  // 0x81E0020AB800000
@08 // OR r/m8,r8 (0x08)
0001000000011110000000000010000010101011100000000000000000000000  // 0x101E0020AB800000
@09 // OR r/m,r (16/32) (0x09)
0001000000011110000000000010000010101011100000000000000000000000  // 0x101E0020AB800000
@0a // OR r8, r/m8 (0x0A)
0000100000011110000000000010000010101011100000000000000000000000  // 0x81E0020AB800000
@0b // OR r,r/m (16/32) (0x0B)
0000100000011110000000000010000010101011100000000000000000000000  // 0x81E0020AB800000
@19 // CALL r/m16/32 (0xFF /2)
0001111001001000000000000010000100000000000000000000000000000000  // 0x1E48002100000000
@18 // INC r/m16/32 (0xFF /0)
0001000000001110000000000010000010101111000000000000000000000000  // 0x100E0020AF000000
@1a // JMP r/m16/32 (0xFF /4)
0000100000001000000000000010000000000000000000000000000000000000  // 0x808002000000000
@1f // POP DS (0x1F)
0000111000001000110000000010010000000000000000000000000000000000  // 0xE08C02400000000
@07 // POP ES (0x07)
0000111000001000110000000010010000000000000000000000000000000000  // 0xE08C02400000000
@17 // POP SS (0x17)
0000111000001000110000000010010000000000000000000000000000000000  // 0xE08C02400000000
@1b // PUSH r/m16/32 (0xFF /6)
0001111000001000100000000010000000000000000000000000000000000000  // 0x1E08802000000000
@0e // PUSH CS (0x0E)
0001111000001000100000000010000000000000000000000000000000000000  // 0x1E08802000000000
@16 // PUSH SS (0x16)
0001111000001000100000000010000000000000000000000000000000000000  // 0x1E08802000000000
@1e // PUSH DS (0x1E)
0001111000001000100000000010000000000000000000000000000000000000  // 0x1E08802000000000
@06 // PUSH ES (0x06)
0001111000001000100000000010000000000000000000000000000000000000  // 0x1E08802000000000
@10 // INT/EXC (uop1) (push eflags) ()
0001100000001000000010000000000000000000010010001000000000000000  // 0x1808080000488000
@11 // INT/EXC (uop2) (push EIP/CS) ()
0001111001001000100000000011000100000000010000000000000000000000  // 0x1E48803100400000
@12 // INT/EXC (uop3) ()
0001111000001000000000000011000000000000000000000000000000000000  // 0x1E08003000000000
