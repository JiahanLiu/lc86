@04 // AND AL,imm8 (0x24)
0100000000001000110000000000000100001010101110000000000000000000  // 0x4008C0010AB80000
@05 // AND (E)AX,imm (0x25)
0100000000001000110000000000000100001010101110000000000000000000  // 0x4008C0010AB80000
@00 // AND r/m8,r8 (0x20)
0000000100001000110000000000000100001010101110000000000000000000  // 0x108C0010AB80000
@01 // AND r/m,r (16/32) (0x21)
0000000100001000110000000000000100001010101110000000000000000000  // 0x108C0010AB80000
@02 // AND r8, r/m8 (0x22)
0010000000001000110000000000000100001010101110000000000000000000  // 0x2008C0010AB80000
@03 // AND r,r/m (16/32) (0x23)
0010000000001000110000000000000100001010101110000000000000000000  // 0x2008C0010AB80000
@07 // DAA (0x27)
0100000000000110110000000000000100001010111110000000000000000000  // 0x4006C0010AF80000
@10 // IRETd (uop2) (0xCF)
0000000010000000000000001000000000000000000000100000000000000000  // 0x80008000020000
@11 // IRETd (uop3) (0xCF)
0000000011000000000111100011100110001000000000000000000000000000  // 0xC01E3988000000
@12 // CMPS m8,m8 uop2 ()
0011111010011100010000000000000100001010111110000000000000000000  // 0x3E9C40010AF80000
@13 // REPNE m8,m8 uop1transient ()
0000000000000000001000000000000000000000000000101111000000000000  // 0x20000002F000
@14 // REPNE m8,m8 uop2transient ()
0011111010011100010000000000000000001010111110101110110000000000  // 0x3E9C40000AFAEC00
@15 // REPNE m8,m8 uop1steadytate ()
0000000010000000001000000000000000000000000000101110110000000000  // 0x8020000002EC00
@16 // REPNE m8,m8 uop2steadystate ()
0011111010011100010000000000000000001010111110101110110000000000  // 0x3E9C40000AFAEC00
@17 // CMPS m,m (16/32) uop2 ()
0111111010011100010000000000000100001010111110000000000000000000  // 0x7E9C40010AF80000
@18 // REPNE m,m (16/32) uop1transient ()
0000000000000000001000000000000000000000000000110000010000000000  // 0x200000030400
@19 // REPNE m,m (16/32) uop2transient ()
0111111010011100010000000000000000001010111110110000000000000000  // 0x7E9C40000AFB0000
@1a // REPNE m,m (16/32) uop1steadystate ()
0000000010000000001000000000000000000000000000110000000000000000  // 0x80200000030000
@1b // REPNE m,m (16/32) uop2steadystate ()
0111111010011100010000000000000000001010111110110000000000000000  // 0x7E9C40000AFB0000
@1c // RET far (uop2) (0xCB)
0000000011000000000010100001000110000000000000000000000000000000  // 0xC00A1180000000
@1d // RET imm16,far (uop1) (0xCA)
0000000000000000000000010000000000000000000000100000000000000000  // 0x10000020000
