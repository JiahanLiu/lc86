@00 // (ADD/AND/OR)r/m8 imm8 (0x80 /0 /4 /1)
000x0000000010000010101111100000000000000000000000000000000000000
@01 // ADD/AND/OR r/m(16/32) imm(16/32) (0x81 /0 /4 /1)
000x0000000010000010101111100000000000000000000000000000000000000
@03 // ADD/AND/OR r/m(16/32) imm8 (0x83 /0 /4 /1)
000x0000000010000010101111100000000000000000000000000000000000000
@1a // CALL ptr16:16/32 (0x9A)
000000000000100101000000000100000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
@08 // MOV r/m8, r8 (0x88)
100x00000000100000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
@09 // MOV r/m, r (16/32) (0x89)
100x00000000100000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
@0a // MOV r8,r/m8 (0x8A)
100x00000000100000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
@0b // MOV r,r/m(16,32) (0x8B)
100x00000000100000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
@0c // MOV r/m16,Sreg (0x8C)
100x00000000100000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
@0e // MOV Sreg, r/m16 (0x8E)
010x00000000100010000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
@0f // POP r/m (16/32) (0x8F)
010100000000100100000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
@10 // XCHG (E )AX,EAX (0x90)
10000000000010000000000000000000000000000000000000000000000000000  // 0x10010000000000000
@11 // XCHG (E )AX,r16/32 (0x91+r7)
10000000000010000000000000000000000011111111111111111111111111111  // 0x1001000001FFFFFFF
10000000000010000000000000000000000011111111111111111111111111111
10000000000010000000000000000000000011111111111111111111111111111
10000000000010000000000000000000000011111111111111111111111111111
10000000000010000000000000000000000011111111111111111111111111111
10000000000010000000000000000000000011111111111111111111111111111
10000000000010000000000000000000000011111111111111111111111111111
@06 // XCHG r/m8,r8 (0x86)
100000000000100000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
@07 // XCHG r/m,r (16/32) (0x87)
100000000000100000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
